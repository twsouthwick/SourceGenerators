// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

namespace Swick.Features.Generator.Tests;

public class FeaturesVerifier : IncrementalSourceGeneratorVerifier<FeaturesGenerator>.Test
{
    private const string Attribute = """
        // <auto-generated />

        #nullable enable

        namespace Swick.Features;

        [global::System.Diagnostics.Conditional("SWICK_FEATURES")]
        [global::System.AttributeUsage(global::System.AttributeTargets.Method, AllowMultiple = true)]
        internal sealed class RegisterAttribute : global::System.Attribute
        {
            public RegisterAttribute(global::System.Type contract, global::System.Type? service = null)
            {
            }
        }

        [global::System.Diagnostics.Conditional("SWICK_FEATURES")]
        [global::System.AttributeUsage(global::System.AttributeTargets.Method, AllowMultiple = true)]
        internal sealed class RegisterFactoryAttribute : global::System.Attribute
        {
            public RegisterFactoryAttribute(global::System.Type serviceType, global::System.String methodName)
            {
            }
        }

        [global::System.Diagnostics.Conditional("SWICK_FEATURES")]
        [global::System.AttributeUsage(global::System.AttributeTargets.Method)]
        internal sealed class ContainerOptionsAttribute : global::System.Attribute
        {
            public bool IsThreadSafe { get; set; }

            public string? SetMethod { get; set; }
        }

        """;

    private const string AttributeFileName = "FeaturesRegistrationAttributes.cs";

    public FeaturesVerifier()
    {
        TestState.GeneratedSources.Add((typeof(FeaturesGenerator), AttributeFileName, Attribute));
    }
}
